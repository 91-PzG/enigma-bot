name: CD
on:
  push:
    branches:
      - main
jobs:
  build_and_release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.CI_PERSONAL_TOKEN }}

      - name: Get release string
        run: |
          commitmsg=${git log -1 --pretty=%B}
          version=${commitmsg#*v}
          [[ $version =~ ^[0-9]+.[0-9]+.[0-9]+$ ]] || exit 1
          echo "RELEASE_VERSION=$version >> $GITHUB_ENV

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Install dependencies
        run: npm ci --no-optional

      - name: Build production files
        run: npm run build --production

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: 91PzGBot
          password: ${{ secrets.CI_PERSONAL_TOKEN }}

      - name: Build and push to Docker registries
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./
          platforms: linux/amd64
          file: ./Dockerfile
          push: true
          tags: |
            ghcr.io/91-pzg/enigma-bot:latest
            ghcr.io/91-pzg/enigma-bot:${{ env.RELEASE_VERSION }}

      - name: Create Release strings
        id: release_strings
        run: |
          echo "RELEASE_TAG=${{ env.RELEASE_VERSION }}" >> $GITHUB_ENV
          echo "RELEASE_NAME=Version ${{ env.RELEASE_VERSION }}" >> $GITHUB_ENV
          echo "RELEASE_FILENAME=enigma-bot-${{ env.RELEASE_VERSION }}.zip" >> $GITHUB_ENV

      - name: Zip output files
        run: |
          cd dist/
          zip -r "${{ env.RELEASE_FILENAME }}" *
          mv "${{ env.RELEASE_FILENAME }}" ../../
          cd ../../

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.RELEASE_TAG }}
          name: ${{ env.RELEASE_NAME }}
          files: |
            ${{ env.RELEASE_FILENAME }}

      - name: Invoke deployment hook
        uses: distributhor/workflow-webhook@v2
        env:
          webhook_url: ${{ secrets.DEPLOY_WEBHOOK }}
          webhook_secret: ${{ secrets.DEPLOY_SECRET }}
          silent: true
